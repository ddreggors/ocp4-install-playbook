
---
- hosts: localhost
  vars:
    # Defaults can be added here, and overridden in group_vars
    clean_install_dir: true
    mirror_repo: false
    download: true
    install: false

  tasks:
    - name: Remove old install dir if it exists
      file:
        path: "{{ install_path }}"
        state: absent
      when: clean_install_dir|bool

    - name: Check that the install dir exists
      stat:
        path: "{{ install_path }}"
      register: install_dir_stat

    - name: Create install dir
      file:
        path: "{{ install_path }}"
        state: directory
      when: not install_dir_stat.stat.exists

    - name: Create openshift install file
      template:
        src: "templates/install-config.yaml.j2"
        dest: "{{ install_path }}/install-config.yaml"

    - name: Get release into local repo
      shell: |
        oc adm release mirror -a {{ pull_secret_path }} --from=quay.io/{{ ocp_repo }}/{{ release_name }}:{{ ocp_release }}-{{ arch }} --to={{ local_reg }}/{{ local_repo }} --to-release-image={{ local_reg }}/{{ local_repo }}:{{ ocp_release }}-{{arch }}
      when: mirror_repo

    - name: Check that the openshift-install binary file exists
      stat:
        path: openshift-install
      register: stat_result

    - name: Download binary for install
      shell: |
        curl -ksL https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ ocp_release }}/openshift-install-linux-{{ ocp_release }}.tar.gz -o -| tar -xzf - openshift-install
      when:
        - not stat_result.stat.exists and download|bool

    - block:
      - name: Cluster install (Downloaded binary)
        shell: |
          ./openshift-install --dir install create cluster
        when:
          - install|bool and not stat_result.stat.exists
        register: install_log

      - name: Cluster install (Binary in-path)
        shell: |
          openshift-install --dir install create cluster
        when:
          - install|bool and stat_result.stat.exists
        register: install_log

      rescue:

      - name: Show log
        debug:
          msg: "{{ install_log.stderr }}"
